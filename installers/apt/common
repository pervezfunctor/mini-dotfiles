#! /usr/bin/env bash

{

apti() {
  for p in "$@"; do
    slog "Installing package $p"
    is_debian && sudo apt-get -y install --no-install-recommends "$p"
    is_ubuntu && sudo apt-get -y install "$p"
  done
}

essential_install() {
  slog "Updating ubuntu"

  if ! { sudo apt-get update && sudo apt-get upgrade -y; }; then
    err_exit "apt-get update/upgrade failed, quitting"
  fi

  apti software-properties-common apt-transport-https ca-certificates

  slog "Installing essential ubuntu packages"
  apti curl wget git trash-cli tree fzf ripgrep nala
  apti tmux libzmq3-dev pkg-config urlview
  apti zsh fasd zsh-syntax-highlighting zsh-autosuggestions fd-find

  if is_ubuntu; then
    apti unar unzip p7zip build-essential zoxide exa
    apti python3 python3-pip python-is-python3 python3-venv
    apti shellcheck git-extras zip gawk gcc gh xclip xsel
  fi
}

neovim_install() {
  has_cmd brew || return -1

  has_cmd update-locale && sudo update-locale LANG=en_US.UTF8
  brew install neovim lazygit bottom
  apti luarocks gdu

  if has_cmd pnpm; then
    pnpm install -g neovim
  elif has_cmd npm; then
    npm install -g neovim
  fi

  has_cmd pip && pip install neovim

  if has_cmd cargo; then
    cargo install tree-sitter-cli
  elif has_cmd pnpm; then
    pnpm install -g tree-sitter-cli
  else has_cmd npm; then
    npm install -g tree-sitter-cli
  fi
}

vscode_install() {
    has_cmd code && return 0

    wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
    sudo apt-get update
    apti code
}

dotnet_install() {
    has_cmd dotnet && return 0

    wget https://packages.microsoft.com/config/ubuntu/22.10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    srm packages-microsoft-prod.deb
    sudo apt-get update
    apti dotnet-sdk-8.0
}

docker_install() {
  has_cmd docker && return 0

  sudo apt-get update

  # Install required packages
  apti apt-transport-https ca-certificates curl gnupg-agent software-properties-common

  # Add Docker GPG key
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

  # Add Docker repository to APT sources
  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

  # Update the package list
  sudo apt-get update

  # Install Docker Engine
  apti docker-ce docker-ce-cli containerd.io

  # Install Docker Compose
  sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  sudo chmod +x /usr/local/bin/docker-compose

  # Add current user to docker group
  sudo usermod -aG docker ${USER}

  # Enable Docker to start on boot
  sudo systemctl enable docker.service
  sudo systemctl enable containerd.service
}

chrome_install() {
  has_cmd google-chrome && return 0

  wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

  sudo dpkg -i google-chrome-stable_current_amd64.deb

  # Install any missing dependencies using apt-get
  sudo apt-get -f install

  srm google-chrome-stable_current_amd64.deb
}

git_install() {
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
  sudo apt-get update
  apti gh

  git_config
}

}
