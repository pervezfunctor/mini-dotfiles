#! /usr/bin/env bash

{

DOT_DIR=~/.config/mini-seartipy

# utils

slog() {
    echo "
${BOLD}${GREEN}SEARTIPY: ${RESET} $1
"
}

err_exit() {
    echo "
${BOLD}${RED}FATAL: ${RESET} $1
"
    exit 1
}

has_cmd() {
    command -v "$1" > /dev/null
}

is_debian() {
    has_cmd lsb_release || return 1

    local OS
    OS=$(lsb_release -i | cut -d ':' -f2)
    [[ "$OS" == *"Debian" ]]
}

is_ubuntu() {
    has_cmd lsb_release || return 1
    local OS
    OS=$(lsb_release -i | cut -d ':' -f2)
    [[ "$OS" == *"Ubuntu" ]]
}

is_apt() {
    is_ubuntu || is_debian
}

sclone() {
    local dest=${*: -1}
    local src=${*: -2:1}

    [ -d "$dest" ] && return 1

    slog "Cloning $src to $dest"
    git clone "$@"
}

smd() {
    [ -d "$1" ] && return 1

    slog "Creating directory $1"
    mkdir -p "$1" 2> /dev/null
}

fln() {
    if [ -e "$1" ]; then
        rm -f "$2"
    else
        echo "$1 does not exist, cannot create link $2"
        return 1
    fi
    slog "Creating link $2 to $1"
    ln -s "$1" "$2"
}

# essential

apti() {
    for p in "$@"; do
        slog "Installing package $p"
        is_debian && sudo apt-get -y install --no-install-recommends "$p"
        is_ubuntu && sudo apt-get -y install "$p"
    done
}

essential_install() {
    slog "Updating ubuntu"

    if ! { sudo apt-get update && sudo apt-get upgrade -y; }; then
        err_exit "apt-get update/upgrade failed, quitting"
    fi

    apti software-properties-common apt-transport-https ca-certificates

    slog "Installing essential ubuntu packages"
    apti curl wget git trash-cli tree fzf ripgrep
    apti tmux libzmq3-dev pkg-config urlview
    apti zsh fasd zsh-syntax-highlighting zsh-autosuggestions fd-find

    if is_ubuntu; then
        apti unar unzip p7zip build-essential zoxide exa python-is-python3
        apti shellcheck git-extras zip gawk
    fi
}

dotfiles_install() {
    sclone https://github.com/pervezfunctor/mini-dotfiles.git "$HOME/${DOT_DIR}"
}

# zsh

zsh_install() {
    slog "Installing zsh"

    smd ~/.zsh
    sclone --depth=1 https://github.com/sindresorhus/pure.git ~/.zsh/pure
    sclone --depth=1 https://github.com/djui/alias-tips.git ~/.zsh/alias-tips

    fln "$HOME/${DOT_DIR}/zshrc ~/.zshrc"
}

installer() {
    essential_install
    dotfiles_install
    zsh_install

    echo "Set zsh as default"
    sudo chsh -s $(which zsh) $(whoami)

    sudo apt-get autoremove -y
    slog "Installation done!"
}

keep_sudo_running() {
    sudo -v
    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

is_apt || err_exit "This installer works only on Ubuntu or Debian. Quitting."

curdir=$(pwd)

rm -f ~/seartipy-error.log ~/seartipy-output.log 2> /dev/null

slog "Installing..."

keep_sudo_running

smd ~/bin
export PATH="$HOME/bin:$PATH"
export DEBIAN_FRONTEND=noninteractive

installer > >(tee ~/seartipy-output.log) 2> >(tee ~/seartipy-error.log >&2)

cd "$curdir"

}
